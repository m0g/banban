// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(nanoid())
  email      String       @unique
  password   String
  name       String?
  Session    Session[]
  boards     Board[]
  Action     Action[]
  date       DateTime     @default(now())
  avatar     String?
  Attachment Attachment[]
  Card       Card[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  date      DateTime @default(now())
}

model Board {
  id    String   @id @default(nanoid())
  name  String?
  lists List[]
  Card  Card[]
  users User[]
  date  DateTime @default(now())
}

model List {
  id      String   @id @default(nanoid())
  name    String?
  pos     Int      @default(0)
  board   Board?   @relation(fields: [boardId], references: [id])
  boardId String?
  cards   Card[]
  date    DateTime @default(now())
}

model Card {
  id          String       @id @default(nanoid())
  name        String?
  list        List?        @relation(fields: [listId], references: [id])
  listId      String?
  board       Board?       @relation(fields: [boardId], references: [id])
  boardId     String?
  pos         Int          @default(0)
  desc        String?
  actions     Action[]
  date        DateTime     @default(now())
  attachments Attachment[]
  user        User?        @relation(references: [id], fields: [userId])
  userId      String?
}

model Action {
  id           String      @id @default(nanoid())
  type         String?
  user         User?       @relation(references: [id], fields: [userId])
  userId       String?
  card         Card?       @relation(fields: [cardId], references: [id])
  cardId       String?
  attachment   Attachment? @relation(fields: [attachmentId], references: [id])
  attachmentId String?
  date         DateTime    @default(now())
}

model Attachment {
  id       String   @id @default(nanoid())
  url      String?
  type     String?
  filename String?
  user     User?    @relation(references: [id], fields: [userId])
  userId   String?
  card     Card?    @relation(fields: [cardId], references: [id])
  cardId   String?
  date     DateTime @default(now())
  Action   Action[]
}
